// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// do_boosting
List do_boosting(arma::mat X, double precision, double alpha, double beta, double gamma, int max_resol, int num_each_dim, int num_second, double learn_rate, int min_obs, int nbins, double eta_subsample, double thresh_stop, int ntrees_wait, int max_n_var);
RcppExport SEXP _boostPM_do_boosting(SEXP XSEXP, SEXP precisionSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP gammaSEXP, SEXP max_resolSEXP, SEXP num_each_dimSEXP, SEXP num_secondSEXP, SEXP learn_rateSEXP, SEXP min_obsSEXP, SEXP nbinsSEXP, SEXP eta_subsampleSEXP, SEXP thresh_stopSEXP, SEXP ntrees_waitSEXP, SEXP max_n_varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type max_resol(max_resolSEXP);
    Rcpp::traits::input_parameter< int >::type num_each_dim(num_each_dimSEXP);
    Rcpp::traits::input_parameter< int >::type num_second(num_secondSEXP);
    Rcpp::traits::input_parameter< double >::type learn_rate(learn_rateSEXP);
    Rcpp::traits::input_parameter< int >::type min_obs(min_obsSEXP);
    Rcpp::traits::input_parameter< int >::type nbins(nbinsSEXP);
    Rcpp::traits::input_parameter< double >::type eta_subsample(eta_subsampleSEXP);
    Rcpp::traits::input_parameter< double >::type thresh_stop(thresh_stopSEXP);
    Rcpp::traits::input_parameter< int >::type ntrees_wait(ntrees_waitSEXP);
    Rcpp::traits::input_parameter< int >::type max_n_var(max_n_varSEXP);
    rcpp_result_gen = Rcpp::wrap(do_boosting(X, precision, alpha, beta, gamma, max_resol, num_each_dim, num_second, learn_rate, min_obs, nbins, eta_subsample, thresh_stop, ntrees_wait, max_n_var));
    return rcpp_result_gen;
END_RCPP
}
// simulation
arma::mat simulation(List tree_list, int size_simulation, arma::mat uniform_values, arma::mat support);
RcppExport SEXP _boostPM_simulation(SEXP tree_listSEXP, SEXP size_simulationSEXP, SEXP uniform_valuesSEXP, SEXP supportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< int >::type size_simulation(size_simulationSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type uniform_values(uniform_valuesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type support(supportSEXP);
    rcpp_result_gen = Rcpp::wrap(simulation(tree_list, size_simulation, uniform_values, support));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_log_density
List evaluate_log_density(List tree_list, arma::mat eval_points, arma::mat support);
RcppExport SEXP _boostPM_evaluate_log_density(SEXP tree_listSEXP, SEXP eval_pointsSEXP, SEXP supportSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type tree_list(tree_listSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type eval_points(eval_pointsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type support(supportSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_log_density(tree_list, eval_points, support));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_boostPM_do_boosting", (DL_FUNC) &_boostPM_do_boosting, 15},
    {"_boostPM_simulation", (DL_FUNC) &_boostPM_simulation, 4},
    {"_boostPM_evaluate_log_density", (DL_FUNC) &_boostPM_evaluate_log_density, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_boostPM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
